{"version":3,"sources":["../webpack:/jira-release-actions/lib/main.js","../webpack:/jira-release-actions/node_modules/follow-redirects/index.js","../webpack:/jira-release-actions/node_modules/has-flag/index.js","../webpack:/jira-release-actions/node_modules/supports-color/index.js","../webpack:/jira-release-actions/webpack/bootstrap","../webpack:/jira-release-actions/webpack/startup"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","core_1","__webpack_require__","env_1","api_1","DebugMessages","printConfiguration","info","EMAIL","PROJECT","SUBDOMAIN","RELEASE_NAME","CREATE","TICKETS","RELEASE","ARCHIVE","async","run","DRY_RUN","api","API","API_TOKEN","project","loadProject","PROJECT_LOADED","id","version","versions","find","name","VERSION_NOT_FOUND","VERSION_FOUND","release","archive","VERSION_WILL_BE_CREATED","versionToCreate","released","projectId","Number","releaseDate","Date","toISOString","archived","createVersion","VERSION_CREATED","VERSION_WILL_BE_UPDATED","versionToUpdate","updateVersion","VERSION_UPDATED","tickets","split","ticket","UPDATING_TICKET","updateIssue","TICKET_UPDATED","VERSION_WILL_BE_ARCHIVED","_e","e","setFailed","url","URL","http","https","Writable","assert","debug","events","eventHandlers","forEach","event","arg1","arg2","arg3","_redirectable","emit","InvalidUrlError","createErrorType","TypeError","RedirectionError","TooManyRedirectsError","MaxBodyLengthExceededError","WriteAfterEndError","RedirectableRequest","options","responseCallback","_sanitizeOptions","_options","_ended","_ending","_redirectCount","_redirects","_requestBodyLength","_requestBodyBuffers","on","self","_onNativeResponse","response","_processResponse","_performRequest","abort","abortRequest","_currentRequest","write","data","encoding","callback","isString","isBuffer","isFunction","length","maxBodyLength","push","end","currentRequest","setHeader","headers","removeHeader","setTimeout","msecs","destroyOnTimeout","socket","removeListener","destroy","addListener","startTimer","_timeout","clearTimeout","clearTimer","once","method","a","b","property","host","hostname","pathname","path","searchPos","indexOf","substring","search","protocol","nativeProtocol","nativeProtocols","agents","scheme","slice","agent","request","_currentUrl","test","format","_isRedirect","i","buffers","writeNext","error","buffer","finished","statusCode","trackRedirects","location","followRedirects","responseUrl","redirects","maxRedirects","requestHeaders","beforeRedirect","assign","Host","req","getHeader","removeMatchingHeaders","currentHostHeader","currentUrlParts","parse","currentHost","currentUrl","redirectUrl","resolve","cause","redirectUrlParts","isSubdomain","responseDetails","requestDetails","err","wrap","protocols","keys","wrappedProtocol","input","parsed","urlToOptions","equal","wrappedRequest","defineProperties","noop","urlObject","startsWith","hash","href","port","regex","lastValue","header","String","trim","code","message","baseClass","CustomError","properties","Error","captureStackTrace","constructor","subdomain","domain","dot","endsWith","module","flag","argv","process","prefix","position","terminatorPosition","os","tty","hasFlag","env","forceColor","FORCE_COLOR","Math","min","parseInt","translateLevel","level","hasBasic","has256","has16m","supportsColor","haveStream","streamIsTTY","TERM","platform","osRelease","some","sign","CI_NAME","TEAMCITY_VERSION","COLORTERM","TERM_PROGRAM_VERSION","TERM_PROGRAM","getSupportLevel","stream","isTTY","stdout","isatty","stderr","__webpack_module_cache__","moduleId","cachedModule","threw","__webpack_modules__","__webpack_exports__"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst core_1 = require(\"@actions/core\");\r\nconst env_1 = require(\"./env\");\r\nconst api_1 = require(\"./api\");\r\nconst DebugMessages = __importStar(require(\"./constants/debug-messages\"));\r\nconst printConfiguration = () => {\r\n    (0, core_1.info)(`\n    CONFIGURED WITH OPTIONS:\n      * email ${env_1.EMAIL}\n      * project: ${env_1.PROJECT}\n      * subdomain: ${env_1.SUBDOMAIN}\n      * release_name: ${env_1.RELEASE_NAME}\n      * create: ${env_1.CREATE}\n      * tickets: ${env_1.TICKETS}\n      * release: ${env_1.RELEASE}\n      * archive: ${env_1.ARCHIVE}\n  `);\r\n};\r\nasync function run() {\r\n    try {\r\n        if (env_1.DRY_RUN === 'ci') {\r\n            printConfiguration();\r\n            return;\r\n        }\r\n        const api = new api_1.API(env_1.EMAIL, env_1.API_TOKEN, env_1.PROJECT, env_1.SUBDOMAIN);\r\n        const project = await api.loadProject();\r\n        (0, core_1.info)(DebugMessages.PROJECT_LOADED(project.id));\r\n        if (env_1.DRY_RUN === 'true') {\r\n            const version = project.versions.find((v) => v.name === env_1.RELEASE_NAME);\r\n            if (version === undefined) {\r\n                (0, core_1.info)(DebugMessages.VERSION_NOT_FOUND(env_1.RELEASE_NAME));\r\n            }\r\n            else {\r\n                (0, core_1.info)(DebugMessages.VERSION_FOUND(env_1.RELEASE_NAME));\r\n            }\r\n            return;\r\n        }\r\n        let version = project.versions.find((v) => v.name === env_1.RELEASE_NAME);\r\n        const release = env_1.RELEASE === true;\r\n        const archive = env_1.ARCHIVE === true;\r\n        if (version === undefined) {\r\n            // Create new release and ignore ARCHIVE value\r\n            (0, core_1.info)(DebugMessages.VERSION_NOT_FOUND(env_1.RELEASE_NAME));\r\n            if (env_1.CREATE) {\r\n                (0, core_1.info)(DebugMessages.VERSION_WILL_BE_CREATED(env_1.RELEASE_NAME));\r\n                const versionToCreate = {\r\n                    name: env_1.RELEASE_NAME,\r\n                    released: release === true && archive !== true,\r\n                    projectId: Number(project.id),\r\n                    ...(release && { releaseDate: new Date().toISOString() }),\r\n                    archived: false\r\n                };\r\n                version = await api.createVersion(versionToCreate);\r\n                (0, core_1.info)(DebugMessages.VERSION_CREATED(env_1.RELEASE_NAME));\r\n            }\r\n        }\r\n        else {\r\n            // update release and ignore ARCHIVE value\r\n            (0, core_1.info)(DebugMessages.VERSION_WILL_BE_UPDATED(env_1.RELEASE_NAME));\r\n            const versionToUpdate = {\r\n                released: release,\r\n                ...(release && { releaseDate: new Date().toISOString() }),\r\n                archived: false\r\n            };\r\n            version = await api.updateVersion(version.id, versionToUpdate);\r\n            (0, core_1.info)(DebugMessages.VERSION_UPDATED(env_1.RELEASE_NAME));\r\n        }\r\n        // Assign JIRA issues to Release\r\n        if (env_1.TICKETS !== '') {\r\n            const tickets = env_1.TICKETS.split(',');\r\n            for (const ticket of tickets) {\r\n                (0, core_1.info)(DebugMessages.UPDATING_TICKET(ticket));\r\n                if (version?.id !== undefined) {\r\n                    await api.updateIssue(ticket, version.id);\r\n                    (0, core_1.info)(DebugMessages.TICKET_UPDATED(ticket, version.id));\r\n                }\r\n            }\r\n        }\r\n        // Now let's do the ARCHIVE business\r\n        if (archive) {\r\n            (0, core_1.info)(DebugMessages.VERSION_WILL_BE_ARCHIVED(env_1.RELEASE_NAME));\r\n            // if archive then we ignore release value\r\n            const versionToUpdate = {\r\n                released: false,\r\n                releaseDate: undefined,\r\n                archived: archive\r\n            };\r\n            if (version?.id !== undefined) {\r\n                version = await api.updateVersion(version.id, versionToUpdate);\r\n                (0, core_1.info)(DebugMessages.VERSION_UPDATED(env_1.RELEASE_NAME));\r\n            }\r\n        }\r\n    }\r\n    catch (_e) {\r\n        const e = _e;\r\n        (0, core_1.setFailed)(e);\r\n    }\r\n}\r\nrun();\r\n","var url = require(\"url\");\nvar URL = url.URL;\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar Writable = require(\"stream\").Writable;\nvar assert = require(\"assert\");\nvar debug = require(\"./debug\");\n\n// Create handlers that pass events from native requests\nvar events = [\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"];\nvar eventHandlers = Object.create(null);\nevents.forEach(function (event) {\n  eventHandlers[event] = function (arg1, arg2, arg3) {\n    this._redirectable.emit(event, arg1, arg2, arg3);\n  };\n});\n\nvar InvalidUrlError = createErrorType(\n  \"ERR_INVALID_URL\",\n  \"Invalid URL\",\n  TypeError\n);\n// Error types with codes\nvar RedirectionError = createErrorType(\n  \"ERR_FR_REDIRECTION_FAILURE\",\n  \"Redirected request failed\"\n);\nvar TooManyRedirectsError = createErrorType(\n  \"ERR_FR_TOO_MANY_REDIRECTS\",\n  \"Maximum number of redirects exceeded\"\n);\nvar MaxBodyLengthExceededError = createErrorType(\n  \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\n  \"Request body larger than maxBodyLength limit\"\n);\nvar WriteAfterEndError = createErrorType(\n  \"ERR_STREAM_WRITE_AFTER_END\",\n  \"write after end\"\n);\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  this._sanitizeOptions(options);\n  this._options = options;\n  this._ended = false;\n  this._ending = false;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    self._processResponse(response);\n  };\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\nRedirectableRequest.prototype.abort = function () {\n  abortRequest(this._currentRequest);\n  this.emit(\"abort\");\n};\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Writing is not allowed if end has been called\n  if (this._ending) {\n    throw new WriteAfterEndError();\n  }\n\n  // Validate input and shift parameters if necessary\n  if (!isString(data) && !isBuffer(data)) {\n    throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (isFunction(encoding)) {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new MaxBodyLengthExceededError());\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (isFunction(data)) {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (isFunction(encoding)) {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data if needed and end\n  if (!data) {\n    this._ended = this._ending = true;\n    this._currentRequest.end(null, null, callback);\n  }\n  else {\n    var self = this;\n    var currentRequest = this._currentRequest;\n    this.write(data, encoding, function () {\n      self._ended = true;\n      currentRequest.end(null, null, callback);\n    });\n    this._ending = true;\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Global timeout for all underlying requests\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n  var self = this;\n\n  // Destroys the socket on timeout\n  function destroyOnTimeout(socket) {\n    socket.setTimeout(msecs);\n    socket.removeListener(\"timeout\", socket.destroy);\n    socket.addListener(\"timeout\", socket.destroy);\n  }\n\n  // Sets up a timer to trigger a timeout event\n  function startTimer(socket) {\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n    }\n    self._timeout = setTimeout(function () {\n      self.emit(\"timeout\");\n      clearTimer();\n    }, msecs);\n    destroyOnTimeout(socket);\n  }\n\n  // Stops a timeout from triggering\n  function clearTimer() {\n    // Clear the timeout\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n      self._timeout = null;\n    }\n\n    // Clean up all attached listeners\n    self.removeListener(\"abort\", clearTimer);\n    self.removeListener(\"error\", clearTimer);\n    self.removeListener(\"response\", clearTimer);\n    if (callback) {\n      self.removeListener(\"timeout\", callback);\n    }\n    if (!self.socket) {\n      self._currentRequest.removeListener(\"socket\", startTimer);\n    }\n  }\n\n  // Attach callback if passed\n  if (callback) {\n    this.on(\"timeout\", callback);\n  }\n\n  // Start the timer if or when the socket is opened\n  if (this.socket) {\n    startTimer(this.socket);\n  }\n  else {\n    this._currentRequest.once(\"socket\", startTimer);\n  }\n\n  // Clean up on events\n  this.on(\"socket\", destroyOnTimeout);\n  this.on(\"abort\", clearTimer);\n  this.on(\"error\", clearTimer);\n  this.on(\"response\", clearTimer);\n\n  return this;\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\nRedirectableRequest.prototype._sanitizeOptions = function (options) {\n  // Ensure headers are always present\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n};\n\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    this.emit(\"error\", new TypeError(\"Unsupported protocol \" + protocol));\n    return;\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.slice(0, -1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request and set up its event handlers\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  request._redirectable = this;\n  for (var event of events) {\n    request.on(event, eventHandlers[event]);\n  }\n\n  // RFC7230§5.3.1: When making a request directly to an origin server, […]\n  // a client MUST send only the absolute path […] as the request-target.\n  this._currentUrl = /^\\//.test(this._options.path) ?\n    url.format(this._options) :\n    // When making a request to a proxy, […]\n    // a client MUST send the target URI in absolute-form […].\n    this._options.path;\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end\n    var i = 0;\n    var self = this;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext(error) {\n      // Only write if this request has not been redirected yet\n      /* istanbul ignore else */\n      if (request === self._currentRequest) {\n        // Report any write errors\n        /* istanbul ignore if */\n        if (error) {\n          self.emit(\"error\", error);\n        }\n        // Write the next buffer if there are still left\n        else if (i < buffers.length) {\n          var buffer = buffers[i++];\n          /* istanbul ignore else */\n          if (!request.finished) {\n            request.write(buffer.data, buffer.encoding, writeNext);\n          }\n        }\n        // End the request if `end` has been called on us\n        else if (self._ended) {\n          request.end();\n        }\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  var statusCode = response.statusCode;\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n\n  // If the response is not a redirect; return it as-is\n  var location = response.headers.location;\n  if (!location || this._options.followRedirects === false ||\n      statusCode < 300 || statusCode >= 400) {\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n    return;\n  }\n\n  // The response is a redirect, so abort the current request\n  abortRequest(this._currentRequest);\n  // Discard the remainder of the response to avoid waiting for data\n  response.destroy();\n\n  // RFC7231§6.4: A client SHOULD detect and intervene\n  // in cyclical redirections (i.e., \"infinite\" redirection loops).\n  if (++this._redirectCount > this._options.maxRedirects) {\n    this.emit(\"error\", new TooManyRedirectsError());\n    return;\n  }\n\n  // Store the request headers if applicable\n  var requestHeaders;\n  var beforeRedirect = this._options.beforeRedirect;\n  if (beforeRedirect) {\n    requestHeaders = Object.assign({\n      // The Host header was set by nativeProtocol.request\n      Host: response.req.getHeader(\"host\"),\n    }, this._options.headers);\n  }\n\n  // RFC7231§6.4: Automatic redirection needs to done with\n  // care for methods not known to be safe, […]\n  // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change\n  // the request method from POST to GET for the subsequent request.\n  var method = this._options.method;\n  if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\n      // RFC7231§6.4.4: The 303 (See Other) status code indicates that\n      // the server is redirecting the user agent to a different resource […]\n      // A user agent can perform a retrieval request targeting that URI\n      // (a GET or HEAD request if using HTTP) […]\n      (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\n    this._options.method = \"GET\";\n    // Drop a possible entity and headers related to it\n    this._requestBodyBuffers = [];\n    removeMatchingHeaders(/^content-/i, this._options.headers);\n  }\n\n  // Drop the Host header, as the redirect might lead to a different host\n  var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);\n\n  // If the redirect is relative, carry over the host of the last request\n  var currentUrlParts = url.parse(this._currentUrl);\n  var currentHost = currentHostHeader || currentUrlParts.host;\n  var currentUrl = /^\\w+:/.test(location) ? this._currentUrl :\n    url.format(Object.assign(currentUrlParts, { host: currentHost }));\n\n  // Determine the URL of the redirection\n  var redirectUrl;\n  try {\n    redirectUrl = url.resolve(currentUrl, location);\n  }\n  catch (cause) {\n    this.emit(\"error\", new RedirectionError({ cause: cause }));\n    return;\n  }\n\n  // Create the redirected request\n  debug(\"redirecting to\", redirectUrl);\n  this._isRedirect = true;\n  var redirectUrlParts = url.parse(redirectUrl);\n  Object.assign(this._options, redirectUrlParts);\n\n  // Drop confidential headers when redirecting to a less secure protocol\n  // or to a different domain that is not a superdomain\n  if (redirectUrlParts.protocol !== currentUrlParts.protocol &&\n     redirectUrlParts.protocol !== \"https:\" ||\n     redirectUrlParts.host !== currentHost &&\n     !isSubdomain(redirectUrlParts.host, currentHost)) {\n    removeMatchingHeaders(/^(?:authorization|cookie)$/i, this._options.headers);\n  }\n\n  // Evaluate the beforeRedirect callback\n  if (isFunction(beforeRedirect)) {\n    var responseDetails = {\n      headers: response.headers,\n      statusCode: statusCode,\n    };\n    var requestDetails = {\n      url: currentUrl,\n      method: method,\n      headers: requestHeaders,\n    };\n    try {\n      beforeRedirect(this._options, responseDetails, requestDetails);\n    }\n    catch (err) {\n      this.emit(\"error\", err);\n      return;\n    }\n    this._sanitizeOptions(this._options);\n  }\n\n  // Perform the redirected request\n  try {\n    this._performRequest();\n  }\n  catch (cause) {\n    this.emit(\"error\", new RedirectionError({ cause: cause }));\n  }\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    function request(input, options, callback) {\n      // Parse parameters\n      if (isString(input)) {\n        var parsed;\n        try {\n          parsed = urlToOptions(new URL(input));\n        }\n        catch (err) {\n          /* istanbul ignore next */\n          parsed = url.parse(input);\n        }\n        if (!isString(parsed.protocol)) {\n          throw new InvalidUrlError({ input });\n        }\n        input = parsed;\n      }\n      else if (URL && (input instanceof URL)) {\n        input = urlToOptions(input);\n      }\n      else {\n        callback = options;\n        options = input;\n        input = { protocol: protocol };\n      }\n      if (isFunction(options)) {\n        callback = options;\n        options = null;\n      }\n\n      // Set defaults\n      options = Object.assign({\n        maxRedirects: exports.maxRedirects,\n        maxBodyLength: exports.maxBodyLength,\n      }, input, options);\n      options.nativeProtocols = nativeProtocols;\n      if (!isString(options.host) && !isString(options.hostname)) {\n        options.hostname = \"::1\";\n      }\n\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    }\n\n    // Executes a GET request, following redirects\n    function get(input, options, callback) {\n      var wrappedRequest = wrappedProtocol.request(input, options, callback);\n      wrappedRequest.end();\n      return wrappedRequest;\n    }\n\n    // Expose the properties on the wrapped protocol\n    Object.defineProperties(wrappedProtocol, {\n      request: { value: request, configurable: true, enumerable: true, writable: true },\n      get: { value: get, configurable: true, enumerable: true, writable: true },\n    });\n  });\n  return exports;\n}\n\n/* istanbul ignore next */\nfunction noop() { /* empty */ }\n\n// from https://github.com/nodejs/node/blob/master/lib/internal/url.js\nfunction urlToOptions(urlObject) {\n  var options = {\n    protocol: urlObject.protocol,\n    hostname: urlObject.hostname.startsWith(\"[\") ?\n      /* istanbul ignore next */\n      urlObject.hostname.slice(1, -1) :\n      urlObject.hostname,\n    hash: urlObject.hash,\n    search: urlObject.search,\n    pathname: urlObject.pathname,\n    path: urlObject.pathname + urlObject.search,\n    href: urlObject.href,\n  };\n  if (urlObject.port !== \"\") {\n    options.port = Number(urlObject.port);\n  }\n  return options;\n}\n\nfunction removeMatchingHeaders(regex, headers) {\n  var lastValue;\n  for (var header in headers) {\n    if (regex.test(header)) {\n      lastValue = headers[header];\n      delete headers[header];\n    }\n  }\n  return (lastValue === null || typeof lastValue === \"undefined\") ?\n    undefined : String(lastValue).trim();\n}\n\nfunction createErrorType(code, message, baseClass) {\n  // Create constructor\n  function CustomError(properties) {\n    Error.captureStackTrace(this, this.constructor);\n    Object.assign(this, properties || {});\n    this.code = code;\n    this.message = this.cause ? message + \": \" + this.cause.message : message;\n  }\n\n  // Attach constructor and set default properties\n  CustomError.prototype = new (baseClass || Error)();\n  CustomError.prototype.constructor = CustomError;\n  CustomError.prototype.name = \"Error [\" + code + \"]\";\n  return CustomError;\n}\n\nfunction abortRequest(request) {\n  for (var event of events) {\n    request.removeListener(event, eventHandlers[event]);\n  }\n  request.on(\"error\", noop);\n  request.abort();\n}\n\nfunction isSubdomain(subdomain, domain) {\n  assert(isString(subdomain) && isString(domain));\n  var dot = subdomain.length - domain.length - 1;\n  return dot > 0 && subdomain[dot] === \".\" && subdomain.endsWith(domain);\n}\n\nfunction isString(value) {\n  return typeof value === \"string\" || value instanceof String;\n}\n\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\n\nfunction isBuffer(value) {\n  return typeof value === \"object\" && (\"length\" in value);\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(3109);\n"]}